@use "sass:map";

@mixin theme-vars($theme-name) {
    $theme: map-get($map: $themes, $key: $theme-name);
    $var-list: theme-to-var-list($theme);

    @each $var, $value in $var-list {
        #{"--#{$var}"}: $value;
    }
}

@mixin apply-theme-properties($page, $component: null, $effect: null) {
    $properties: get-theme-vars($page, $component, $effect);

    @each $property, $value in $properties {
        #{$property}: $value;
    }
}

@mixin apply-theme-effects($page, $component) {
    $effects: get-theme-effects($page, $component);

    @each $effect, $theme-effect in $effects {
        &:#{$effect} {
            $path: map-get($map: $theme-effect, $key: "path");
            $node: map-get($map: $theme-effect, $key: "node");

            @each $property, $value in $node {
                #{$property}: var(#{$path}-#{$property});
            }
        }
    }
}

@mixin apply-theme-pseudo($page, $component) {
    $pseudo-elements: get-theme-pseudo($page, $component);

    @each $pseudo, $pseudo-node in $pseudo-elements {
        &::#{$pseudo} {
            $path: map-get($map: $pseudo-node, $key: "path");
            $node: map-get($map: $pseudo-node, $key: "node");

            @each $property, $value in $node {
                #{$property}: var(#{$path}-#{$property});
            }
        }
    }
}

@mixin apply-theme($page, $component: null) {
    @include apply-theme-properties($page, $component);
    @if $component {
        @include apply-theme-effects($page, $component);
        @include apply-theme-pseudo($page, $component);
    }
}
